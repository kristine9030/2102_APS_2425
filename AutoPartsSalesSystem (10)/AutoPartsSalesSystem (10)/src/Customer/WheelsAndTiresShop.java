package Customer;

import Admin.*;
import autopartssalessystem.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.sql.SQLException;
import javax.swing.BoxLayout;

public class WheelsAndTiresShop extends javax.swing.JFrame {

    Connection Con = null;
    PreparedStatement pst = null;
    ResultSet Rs = null;
    Statement St = null;
    private int customerID;

    public WheelsAndTiresShop(int customerID) {
        initComponents();
        DisplayItems();
        this.customerID = customerID;
    }

    private WheelsAndTiresShop() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mainpanel = new javax.swing.JPanel();
        desktopPanel = new javax.swing.JDesktopPane();
        menu = new javax.swing.JButton();
        cart1 = new javax.swing.JButton();
        FluidsAndLubricants = new javax.swing.JLabel();
        EngineComponents = new javax.swing.JLabel();
        Accessories = new javax.swing.JLabel();
        Horns = new javax.swing.JLabel();
        WheelsAndTires = new javax.swing.JLabel();
        quantityTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        DetailsPanel = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProductsTable = new javax.swing.JTable();
        ProductIDTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CustomerBtn = new javax.swing.JButton();
        quantityTXT = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        addtocartbtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton1.setText("jButton1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/black3.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/logo.png"))); // NOI18N
        jLabel5.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainpanel.setBackground(new java.awt.Color(51, 51, 51));
        mainpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        desktopPanel.setBackground(new java.awt.Color(204, 153, 0));

        menu.setBackground(new java.awt.Color(201, 163, 9));
        menu.setForeground(new java.awt.Color(153, 126, 21));
        menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/burger-bar.png"))); // NOI18N
        menu.setBorder(null);
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        cart1.setBackground(new java.awt.Color(223, 169, 4));
        cart1.setForeground(new java.awt.Color(255, 204, 0));
        cart1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cart.png"))); // NOI18N
        cart1.setBorderPainted(false);
        cart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cart1ActionPerformed(evt);
            }
        });

        desktopPanel.setLayer(menu, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPanel.setLayer(cart1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopPanelLayout = new javax.swing.GroupLayout(desktopPanel);
        desktopPanel.setLayout(desktopPanelLayout);
        desktopPanelLayout.setHorizontalGroup(
            desktopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 856, Short.MAX_VALUE)
                .addComponent(cart1)
                .addContainerGap())
        );
        desktopPanelLayout.setVerticalGroup(
            desktopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopPanelLayout.createSequentialGroup()
                .addGroup(desktopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cart1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        mainpanel.add(desktopPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 30));

        FluidsAndLubricants.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        FluidsAndLubricants.setForeground(new java.awt.Color(204, 204, 204));
        FluidsAndLubricants.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/down.png"))); // NOI18N
        FluidsAndLubricants.setText("Fluids and Lubricants ");
        FluidsAndLubricants.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        FluidsAndLubricants.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FluidsAndLubricantsMouseClicked(evt);
            }
        });
        mainpanel.add(FluidsAndLubricants, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        EngineComponents.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        EngineComponents.setForeground(new java.awt.Color(204, 204, 204));
        EngineComponents.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/down.png"))); // NOI18N
        EngineComponents.setText("Engine Components");
        EngineComponents.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        EngineComponents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EngineComponentsMouseClicked(evt);
            }
        });
        mainpanel.add(EngineComponents, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 160, -1));

        Accessories.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Accessories.setForeground(new java.awt.Color(204, 204, 204));
        Accessories.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/down.png"))); // NOI18N
        Accessories.setText("Accessories");
        Accessories.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Accessories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AccessoriesMouseClicked(evt);
            }
        });
        mainpanel.add(Accessories, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 141, -1));

        Horns.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Horns.setForeground(new java.awt.Color(204, 204, 204));
        Horns.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/down.png"))); // NOI18N
        Horns.setText("Horns");
        Horns.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Horns.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HornsMouseClicked(evt);
            }
        });
        mainpanel.add(Horns, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 40, 141, -1));

        WheelsAndTires.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        WheelsAndTires.setForeground(new java.awt.Color(255, 255, 255));
        WheelsAndTires.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/down.png"))); // NOI18N
        WheelsAndTires.setText("Wheels and Tires");
        WheelsAndTires.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        WheelsAndTires.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WheelsAndTiresMouseClicked(evt);
            }
        });
        mainpanel.add(WheelsAndTires, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 40, 141, -1));

        quantityTextField.setBackground(new java.awt.Color(102, 102, 102));
        mainpanel.add(quantityTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 460, 80, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("PRODUCT DETAILS");
        mainpanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 230, 170, -1));

        DetailsPanel.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout DetailsPanelLayout = new javax.swing.GroupLayout(DetailsPanel);
        DetailsPanel.setLayout(DetailsPanelLayout);
        DetailsPanelLayout.setHorizontalGroup(
            DetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );
        DetailsPanelLayout.setVerticalGroup(
            DetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );

        mainpanel.add(DetailsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 270, 340, 180));

        searchField.setBackground(new java.awt.Color(204, 204, 204));
        searchField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchField.setForeground(new java.awt.Color(102, 102, 102));
        searchField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
        });
        mainpanel.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 480, 30));

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/searchbar.png"))); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        mainpanel.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/tires.png"))); // NOI18N
        jLabel7.setText("Wheels and Tires Products");
        mainpanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        ProductsTable.setBackground(new java.awt.Color(204, 204, 204));
        ProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ProductID", "Name", "Stocks", "Price", "Category", "Description"
            }
        ));
        ProductsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ProductsTable);

        jScrollPane1.setViewportView(jScrollPane2);

        mainpanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 530, 430));

        ProductIDTextField.setBackground(new java.awt.Color(102, 102, 102));
        mainpanel.add(ProductIDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 460, 90, 30));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        mainpanel.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 520, 100, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ProductID: ");
        mainpanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 460, -1, 30));

        CustomerBtn.setBackground(new java.awt.Color(210, 161, 12));
        CustomerBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CustomerBtn.setForeground(new java.awt.Color(0, 0, 0));
        CustomerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/left-arrow.png"))); // NOI18N
        CustomerBtn.setText("back");
        CustomerBtn.setBorderPainted(false);
        CustomerBtn.setDisplayedMnemonicIndex(0);
        CustomerBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        CustomerBtn.setIconTextGap(0);
        CustomerBtn.setMargin(new java.awt.Insets(2, 5, 3, 8));
        CustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerBtnActionPerformed(evt);
            }
        });
        mainpanel.add(CustomerBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 600, 90, -1));

        quantityTXT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        quantityTXT.setForeground(new java.awt.Color(255, 255, 255));
        quantityTXT.setText("Quantity:");
        mainpanel.add(quantityTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 460, -1, 30));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/logo.png"))); // NOI18N
        jLabel8.setText("jLabel4");
        mainpanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, -1, -1));

        addtocartbtn.setBackground(new java.awt.Color(0, 0, 0));
        addtocartbtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addtocartbtn.setForeground(new java.awt.Color(255, 255, 255));
        addtocartbtn.setText("Add to Cart");
        addtocartbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtocartbtnActionPerformed(evt);
            }
        });
        mainpanel.add(addtocartbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 520, 130, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/backgroundyellow.png"))); // NOI18N
        jLabel4.setText("jLabel1");
        mainpanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-290, 0, -1, -1));

        getContentPane().add(mainpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 661));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String searchQuery = searchField.getText().trim();
        if (searchQuery.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a search term.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Establish a connection to the database
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autopartssales_db", "root", "");

            // SQL query to search for items
            String sql = "SELECT * FROM products WHERE ProductName LIKE ? OR Category LIKE ? OR Brand LIKE ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, "%" + searchQuery + "%");
            pst.setString(2, "%" + searchQuery + "%");
            pst.setString(3, "%" + searchQuery + "%");

            // Execute the query
            ResultSet rs = pst.executeQuery();

            // Get the table model
            DefaultTableModel model = (DefaultTableModel) ProductsTable.getModel();
            model.setRowCount(0); // Clear existing rows in the table

            // Populate the table with the search results
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("ProductID"),
                    rs.getString("ProductName"),
                    rs.getString("Category"),
                    rs.getDouble("Price"),
                    rs.getInt("Stock"),
                    rs.getString("Description"),
                    rs.getString("Brand")
                });
            }

            // Close connections
            rs.close();
            pst.close();
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error while searching: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed

    }//GEN-LAST:event_searchFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void CustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerBtnActionPerformed
        // TODO add your handling code here:
        CustomerDashboard customerdashboard = new CustomerDashboard(this.customerID);
        customerdashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CustomerBtnActionPerformed

    private void ProductsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductsTableMouseClicked
         // Retrieve the model and selected row index
        DefaultTableModel model = (DefaultTableModel) ProductsTable.getModel();
        int MyIndex = ProductsTable.getSelectedRow();

        int Key = 0;
        if (MyIndex != -1) {
            // Populate the fields with the selected row's data
            Key = Integer.valueOf(model.getValueAt(MyIndex, 0).toString());  // ProductID (column 0)
            ProductIDTextField.setText(model.getValueAt(MyIndex, 0).toString()); // Set ProductID in the text field

            // Display the selected product's details in the panel
            String productName = model.getValueAt(MyIndex, 1).toString();
            String category = model.getValueAt(MyIndex, 2).toString();
            String price = model.getValueAt(MyIndex, 3).toString();
            String stock = model.getValueAt(MyIndex, 4).toString();
            String description = model.getValueAt(MyIndex, 5).toString();
            String brand = model.getValueAt(MyIndex, 6).toString();

            // Clear and update the details panel (adjust the component names as per your layout)
            DetailsPanel.removeAll();  // Assuming DetailsPanel is the JPanel next to the table
            DetailsPanel.setLayout(new BoxLayout(DetailsPanel, BoxLayout.Y_AXIS));

            DetailsPanel.add(new JLabel("Product Name: " + productName));
            DetailsPanel.add(new JLabel("Category: " + category));
            DetailsPanel.add(new JLabel("Price: $" + price));
            DetailsPanel.add(new JLabel("Stock: " + stock));
            DetailsPanel.add(new JLabel("Description: " + description));
            DetailsPanel.add(new JLabel("Brand: " + brand));

            // Refresh the panel to display updated information
            DetailsPanel.revalidate();
            DetailsPanel.repaint();
        } else {
            // Show an error message if no row is selected
            JOptionPane.showMessageDialog(this, "Please select a row first.");
        }                  
    }//GEN-LAST:event_ProductsTableMouseClicked

    private void addtocartbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtocartbtnActionPerformed
        // Database connection variables
        Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    try {
        // Assuming customerID is available in the loggedInCustomerId variable
        int loggedInCustomerId = this.customerID; // Replace with actual customer ID from your login system

        // Establish connection to the database
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autopartssales_db", "root", "");

        // Start transaction to ensure data integrity
        conn.setAutoCommit(false);

        // Fetch input values
        String productId = ProductIDTextField.getText().trim();
        int quantity = Integer.parseInt(quantityTextField.getText().trim());

        if (productId.isEmpty() || quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Please provide valid product ID and quantity.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Query to fetch product details from the database
        String fetchProductQuery = "SELECT ProductName, Price, Stock FROM products WHERE ProductID = ?";
        pst = conn.prepareStatement(fetchProductQuery);
        pst.setString(1, productId);
        rs = pst.executeQuery();

        if (rs.next()) {
            String productName = rs.getString("ProductName");
            double price = rs.getDouble("Price");
            int currentStock = rs.getInt("Stock");

            // Check if enough stock is available
            if (currentStock >= quantity) {
                // Calculate total price
                double totalPrice = price * quantity;

                // Insert the selected item into the orders table
                String insertOrderQuery = "INSERT INTO orders (productID, productName, quantity, price, totalPrice, orderDate, customerID) "
                        + "VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP(), ?)";
                pst = conn.prepareStatement(insertOrderQuery);
                pst.setInt(1, Integer.parseInt(productId));
                pst.setString(2, productName);
                pst.setInt(3, quantity);
                pst.setDouble(4, price);
                pst.setDouble(5, totalPrice);
                pst.setInt(6, loggedInCustomerId);  // Insert the customerID here
                pst.executeUpdate();

                // Update the stock in the products table
                String updateStockQuery = "UPDATE products SET Stock = ? WHERE ProductID = ?";
                pst = conn.prepareStatement(updateStockQuery);
                pst.setInt(1, currentStock - quantity);
                pst.setInt(2, Integer.parseInt(productId));
                pst.executeUpdate();

                // Commit transaction
                conn.commit();

                // Notify user about successful order
                JOptionPane.showMessageDialog(this, "Item added to cart successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Insufficient stock available!", "Stock Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Product not found!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException | NumberFormatException ex) {
        // Rollback transaction if an error occurs
        if (conn != null) {
            try {
                conn.rollback();
            } catch (SQLException rollbackEx) {
                JOptionPane.showMessageDialog(this, "Rollback failed: " + rollbackEx.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Close resources to prevent memory leaks
        try {
            if (rs != null) {
                rs.close();
            }
            if (pst != null) {
                pst.close();
            }
            if (conn != null) {
                conn.close();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error closing connection: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_addtocartbtnActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed

        //toggleState(); // Toggle between the two states
    }//GEN-LAST:event_menuActionPerformed

    private void cart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cart1ActionPerformed
        Cart1 cart = new Cart1(this.customerID);
        cart.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_cart1ActionPerformed

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) { // Trigger search on pressing Enter
        String searchQuery = searchField.getText().trim();
        if (searchQuery.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a search term.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Establish a connection to the database
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autopartssales_db", "root", "");

            // SQL query to search for items
            String sql = "SELECT * FROM products WHERE ProductName LIKE ? OR Category LIKE ? OR Brand LIKE ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, "%" + searchQuery + "%");
            pst.setString(2, "%" + searchQuery + "%");
            pst.setString(3, "%" + searchQuery + "%");

            // Execute the query
            ResultSet rs = pst.executeQuery();

            // Get the table model
            DefaultTableModel model = (DefaultTableModel) ProductsTable.getModel();
            model.setRowCount(0); // Clear existing rows in the table

            // Populate the table with the search results
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("ProductID"),
                    rs.getString("ProductName"),
                    rs.getString("Category"),
                    rs.getDouble("Price"),
                    rs.getInt("Stock"),
                    rs.getString("Description"),
                    rs.getString("Brand")
                });
            }

            // Close connections
            rs.close();
            pst.close();
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error while searching: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_searchFieldKeyPressed

    private void FluidsAndLubricantsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FluidsAndLubricantsMouseClicked
        FluidsLubricantsShop fluidlubricants = new FluidsLubricantsShop(this.customerID);
        fluidlubricants.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_FluidsAndLubricantsMouseClicked

    private void EngineComponentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EngineComponentsMouseClicked
        EngineComponentsShop enginecomponents = new EngineComponentsShop(this.customerID);
        enginecomponents.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_EngineComponentsMouseClicked

    private void AccessoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccessoriesMouseClicked
        AccessoriesShop accessories = new AccessoriesShop(this.customerID);
        accessories.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AccessoriesMouseClicked

    private void HornsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HornsMouseClicked
        HornsShop horns = new HornsShop(this.customerID);
        horns.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_HornsMouseClicked

    private void WheelsAndTiresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WheelsAndTiresMouseClicked
        WheelsAndTiresShop wheelstires = new WheelsAndTiresShop(this.customerID);
        wheelstires.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_WheelsAndTiresMouseClicked
    
    private void DisplayItems() {

        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/autopartssales_db", "root", "");
            St = Con.createStatement();
            Rs = St.executeQuery("SELECT * FROM products WHERE Category = 'Wheels and Tires'");

            ProductsTable.setModel(DbUtils.resultSetToTableModel(Rs));  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error displaying items: " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WheelsAndTiresShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WheelsAndTiresShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WheelsAndTiresShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WheelsAndTiresShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WheelsAndTiresShop().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Accessories;
    private javax.swing.JButton CustomerBtn;
    private javax.swing.JPanel DetailsPanel;
    private javax.swing.JLabel EngineComponents;
    private javax.swing.JLabel FluidsAndLubricants;
    private javax.swing.JLabel Horns;
    private javax.swing.JTextField ProductIDTextField;
    private javax.swing.JTable ProductsTable;
    private javax.swing.JLabel WheelsAndTires;
    private javax.swing.JButton addtocartbtn;
    private javax.swing.JButton cart1;
    private javax.swing.JDesktopPane desktopPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JButton menu;
    private javax.swing.JLabel quantityTXT;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables

    private void loadCartData() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
