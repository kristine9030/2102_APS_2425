
package Admin;

import autopartssalessystem.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.table.TableColumn;

public class Customers extends javax.swing.JFrame {
    private int adminID;

    public Customers(int adminID) {
        this.adminID = adminID;
        initComponents();
        DisplayItems();
        nonactive();
    }

    private Customers() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    
    
  
    public void nonactive() {
   
            //sbar.setVisible(false);
           // sbar.setEnabled(false);

            menu.setVisible(true);
            menu.setEnabled(true);
        
   }

    public void active() {

                //sbar.setVisible(true);
               // sbar.setEnabled(true);

                menu.setVisible(false);
                menu.setEnabled(false);
    }
       
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        menu = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sortStocksComboBox = new javax.swing.JComboBox<>();
        AdminBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Cars Parts (12).png"))); // NOI18N
        jLabel3.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jDesktopPane1.setBackground(new java.awt.Color(204, 153, 0));

        menu.setBackground(new java.awt.Color(201, 163, 9));
        menu.setForeground(new java.awt.Color(153, 126, 21));
        menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/burger-bar.png"))); // NOI18N
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ordersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "ID", "Name", "Email", "Password", "PhoneNumber"
            }
        ));
        jScrollPane1.setViewportView(ordersTable);

        jPanel7.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 950, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CUSTOMER LOGS");
        jPanel7.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 24, 229, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Cars Parts (12).png"))); // NOI18N
        jLabel4.setText("jLabel2");
        jPanel7.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-150, 510, 540, 200));

        sortStocksComboBox.setBackground(new java.awt.Color(102, 102, 102));
        sortStocksComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "In Stock", "Low Stock", "Out of Stock" }));
        sortStocksComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortStocksComboBoxActionPerformed(evt);
            }
        });
        jPanel7.add(sortStocksComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, 160, 30));

        AdminBtn.setBackground(new java.awt.Color(210, 161, 12));
        AdminBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AdminBtn.setForeground(new java.awt.Color(0, 0, 0));
        AdminBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/left-arrow.png"))); // NOI18N
        AdminBtn.setText("back");
        AdminBtn.setBorderPainted(false);
        AdminBtn.setDisplayedMnemonicIndex(0);
        AdminBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        AdminBtn.setIconTextGap(0);
        AdminBtn.setMargin(new java.awt.Insets(2, 5, 3, 8));
        AdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminBtnActionPerformed(evt);
            }
        });
        jPanel7.add(AdminBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 540, 90, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/backgroundyellow.png"))); // NOI18N
        jLabel2.setText("jLabel1");
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-290, 0, -1, -1));

        searchField.setBackground(new java.awt.Color(204, 204, 204));
        searchField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchField.setForeground(new java.awt.Color(102, 102, 102));
        searchField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/searchbar.png"))); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(menu, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(searchField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(searchButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menu)
                .addGap(293, 293, 293)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1071, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 337, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menu, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1069, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 0, 1080, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
       active();
    }//GEN-LAST:event_menuActionPerformed

    private void sortStocksComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortStocksComboBoxActionPerformed
        String selectedStock = sortStocksComboBox.getSelectedItem().toString(); // Assuming your combo box is named sortStocksComboBox
        DefaultTableModel tableModel = (DefaultTableModel) ordersTable.getModel(); // Assuming your table is named productsTable
        DefaultTableModel filteredModel = new DefaultTableModel(new String[]{"Product Name", "Stock Quantity"}, 0); // Adjust column names as needed

        try {
            Connection Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/autopartssales_db", "root", "");
            Statement St = Con.createStatement();
            ResultSet Rs = St.executeQuery("SELECT ProductName, Stock FROM products");

            while (Rs.next()) {
                String partName = Rs.getString("ProductName");
                int stockQuantity = Rs.getInt("Stock");

                // Filter based on selected stock condition
                if (selectedStock.equals("In Stock") && stockQuantity > 10) {
                    filteredModel.addRow(new Object[]{partName, stockQuantity});
                } else if (selectedStock.equals("Low Stock") && stockQuantity > 0 && stockQuantity <= 10) {
                    filteredModel.addRow(new Object[]{partName, stockQuantity});
                } else if (selectedStock.equals("Out of Stock") && stockQuantity == 0) {
                    filteredModel.addRow(new Object[]{partName, stockQuantity});
                }
            }
            Con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error filtering items: " + e.getMessage());
        }
        
    // Update the table with the filtered model
    ordersTable.setModel(filteredModel);
    }//GEN-LAST:event_sortStocksComboBoxActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed

    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) { // Trigger search on pressing Enter
            String searchQuery = searchField.getText().trim();
            if (searchQuery.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter a search term.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                // Establish a connection to the database
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autopartssales_db", "root", "");

                // SQL query to search for items
                String sql = "SELECT * FROM products WHERE ProductName LIKE ? OR Category LIKE ? OR Brand LIKE ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, "%" + searchQuery + "%");
                pst.setString(2, "%" + searchQuery + "%");
                pst.setString(3, "%" + searchQuery + "%");

                // Execute the query
                ResultSet rs = pst.executeQuery();

                // Get the table model
                DefaultTableModel model = (DefaultTableModel) ordersTable.getModel();
                model.setRowCount(0); // Clear existing rows in the table

                // Populate the table with the search results
                while (rs.next()) {
                    model.addRow(new Object[]{
                        rs.getInt("ProductID"),
                        rs.getString("ProductName"),
                        rs.getString("Category"),
                        rs.getDouble("Price"),
                        rs.getInt("Stock"),
                        rs.getString("Description"),
                        rs.getString("Brand")
                    });
                }

                // Close connections
                rs.close();
                pst.close();
                conn.close();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error while searching: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_searchFieldKeyPressed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String searchQuery = searchField.getText().trim();
        if (searchQuery.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a search term.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Establish a connection to the database
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autopartssales_db", "root", "");

            // SQL query to search for items
            String sql = "SELECT * FROM products WHERE ProductName LIKE ? OR Category LIKE ? OR Brand LIKE ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, "%" + searchQuery + "%");
            pst.setString(2, "%" + searchQuery + "%");
            pst.setString(3, "%" + searchQuery + "%");

            // Execute the query
            ResultSet rs = pst.executeQuery();

            // Get the table model
            DefaultTableModel model = (DefaultTableModel) ordersTable.getModel();
            model.setRowCount(0); // Clear existing rows in the table

            // Populate the table with the search results
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("ProductID"),
                    rs.getString("ProductName"),
                    rs.getString("Category"),
                    rs.getDouble("Price"),
                    rs.getInt("Stock"),
                    rs.getString("Description"),
                    rs.getString("Brand")
                });
            }

            // Close connections
            rs.close();
            pst.close();
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error while searching: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void AdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminBtnActionPerformed
        // TODO add your handling code here:
        AdminDashboard admindashboard = new AdminDashboard(this.adminID);
        admindashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AdminBtnActionPerformed
    
    
     private void DisplayItems(){
         try {
        // Establish a connection to the database
        Connection Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/autopartssales_db", "root", "");

        // Create a statement to execute the query
        Statement St = Con.createStatement();

        // Query to fetch orders details
        ResultSet Rs = St.executeQuery(
            "SELECT orderID, productID, productName, quantity, price, totalPrice, orderDate, customerID FROM orders"
        );

        // Display the data in the JTable
        ordersTable.setModel(DbUtils.resultSetToTableModel(Rs));  

    } catch (Exception e) {
        // Display an error message if something goes wrong
        JOptionPane.showMessageDialog(this, "Error displaying orders: " + e.getMessage());
    }


     }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdminBtn;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton menu;
    private javax.swing.JTable ordersTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JComboBox<String> sortStocksComboBox;
    // End of variables declaration//GEN-END:variables

    void setUser(String uname) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
